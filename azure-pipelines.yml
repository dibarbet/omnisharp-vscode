trigger:
  batch: true
  branches:
    include:
    - feature/*
    - release
    - prerelease
    - main

pr:
- feature/*
- release
- prerelease
- main

stages:
- template: azure-pipelines/build-all.yml
  parameters:
    isOfficial: false

- stage: Test
  displayName: Test
  dependsOn: []
  jobs:
  - job: Test_Linux
    strategy:
      matrix:
        DotNet6:
          containerName: mcr.microsoft.com/dotnet/sdk:6.0
        DotNet7:
          containerName: mcr.microsoft.com/dotnet/sdk:7.0
        DotNet8:
          containerName: mcr.microsoft.com/dotnet/sdk:8.0
    displayName:  Test Linux
    pool:
      name: NetCore-Public
      demands: ImageOverride -equals 1es-ubuntu-2004-open
    container: $[ variables['containerName'] ]
    steps:
    - template: azure-pipelines/test.yml
      parameters:
        # Prefer the dotnet from the container.
        installDotNet: false

  - job: Test_Windows
    displayName: Test Windows
    strategy:
      matrix:
        DotNet6:
          containerName: mcr.microsoft.com/dotnet/sdk:6.0
        DotNet7:
          containerName: mcr.microsoft.com/dotnet/sdk:7.0
        DotNet8:
          containerName: mcr.microsoft.com/dotnet/sdk:8.0
    pool:
      name: NetCore-Public
      demands: ImageOverride -equals 1es-windows-2022-open
    steps:
    - template: azure-pipelines/test.yml
      parameters:
        installDotNet: false
  
  - job: Test_MacOS
    displayName: Test MacOS
    pool:
      name: Azure Pipelines
      vmImage: macOS-13
    steps:
    - template: azure-pipelines/test.yml
      parameters:
        installDotNet: true

- stage: Test_OmniSharp
  displayName: Test OmniSharp
  dependsOn: []
  jobs:
  - job: Test
    strategy:
      matrix:
        linux:
          demandsName: 1es-ubuntu-2004-open
        windows:
          demandsName: 1es-windows-2022-open
    pool:
      name: NetCore-Public
      demands: ImageOverride -equals $(demandsName)
    steps:
    - template: azure-pipelines/test-omnisharp.yml
