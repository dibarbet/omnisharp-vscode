{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch Extension",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--extensionDevelopmentPath=${workspaceRoot}"
            ],
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Launch Current File slnWithCsproj Integration Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithCsproj/.vscode/lsp_tools_host_slnWithCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/test/integrationTests",
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "TEST_FILE_FILTER": "${file}"
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/test/**/*.js"
            ],
            "resolveSourceMapLocations": [
                "${workspaceFolder}/**",
                "!**/node_modules/**"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Omnisharp: Launch Unit tests",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "args": [
                "-u",
                "tdd",
                "--timeout",
                "999999",
                "--colors",
                "${workspaceFolder}/out/omnisharptest/omnisharpUnitTests/**/*.test.js"
            ],
            "sourceMaps": true,
            "internalConsoleOptions": "openOnSessionStart",
            "outFiles": [
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "build"
        },
        {
            "name": "Omnisharp: Launch Feature Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpFeatureTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "featureTests",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "build"
        },
        {
            "name": "Omnisharp: Launch singleCsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/singleCsproj/.vscode/omnisharp_singleCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "singleCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch razorcsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/BasicRazorApp2_1",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "BasicRazorApp2_1",
            },
        },
        {
            "name": "Omnisharp: Launch slnWithCsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithCsproj/.vscode/omnisharp_slnWithCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnWithCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch singleCsproj Workspace Tests [LSP]",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/singleCsproj/.vscode/omnisharp_lsp_singleCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "singleCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch razorcsproj Workspace Tests [LSP]",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/BasicRazorApp2_1",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "BasicRazorApp2_1",
            },
        },
        {
            "name": "Omnisharp: Launch slnWithCsproj Workspace Tests [LSP]",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithCsproj/.vscode/omnisharp_lsp_slnWithCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnWithCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch slnFilterWithCsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnFilterWithCsproj",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnFilterWithCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch slnWithGenerator Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithGenerator",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnWithGenerator",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Update package dependencies",
            "preLaunchTask": "build",
            "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
            "args": [
                "updatePackageDependencies"
            ],
            "env": {
                "NEW_DEPS_URLS": "https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-x64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-x86-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-arm64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-osx-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x86-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-arm64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-musl-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-musl-arm64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-arm64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-osx-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-osx-arm64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x86-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-arm64-net6.0-1.39.7.zip",
                "NEW_DEPS_VERSION": "1.39.7"
            },
            "cwd": "${workspaceFolder}"
        },
        {
          "type": "node",
          "request": "launch",
          "name": "Update razor package dependencies",
          "preLaunchTask": "build",
          "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
          "args": [
              "updatePackageDependencies"
          ],
          "env": {
              "NEW_DEPS_URLS": "https://download.visualstudio.microsoft.com/download/pr/e5617c98-d08e-43f2-a9bf-a36fec5306b7/af4c33cdb53e85a7de39fb07195e05b2/razorlanguageserver-linux-arm64-7.0.0-preview.23456.2.zip,https://download.visualstudio.microsoft.com/download/pr/e5617c98-d08e-43f2-a9bf-a36fec5306b7/24783517c9a4729efbd7dfd2a97fe5cc/razorlanguageserver-linux-musl-arm64-7.0.0-preview.23456.2.zip,https://download.visualstudio.microsoft.com/download/pr/e5617c98-d08e-43f2-a9bf-a36fec5306b7/e5e12ac99072e02499bef77c2c5034a2/razorlanguageserver-linux-musl-x64-7.0.0-preview.23456.2.zip,https://download.visualstudio.microsoft.com/download/pr/e5617c98-d08e-43f2-a9bf-a36fec5306b7/86a165500517ca828227bfd0f28f7a02/razorlanguageserver-linux-x64-7.0.0-preview.23456.2.zip,https://download.visualstudio.microsoft.com/download/pr/e5617c98-d08e-43f2-a9bf-a36fec5306b7/d61e51f223e6bfeceae821b1cce36bfc/razorlanguageserver-osx-arm64-7.0.0-preview.23456.2.zip,https://download.visualstudio.microsoft.com/download/pr/e5617c98-d08e-43f2-a9bf-a36fec5306b7/b9ee27ddd84b0f4faf82e88589c8584f/razorlanguageserver-osx-x64-7.0.0-preview.23456.2.zip,https://download.visualstudio.microsoft.com/download/pr/e5617c98-d08e-43f2-a9bf-a36fec5306b7/d279c139e3d914fec96dfab50f05f438/razorlanguageserver-win-arm64-7.0.0-preview.23456.2.zip,https://download.visualstudio.microsoft.com/download/pr/e5617c98-d08e-43f2-a9bf-a36fec5306b7/258d3df59cb903ca4bcb9d42b854e28b/razorlanguageserver-win-x64-7.0.0-preview.23456.2.zip,https://download.visualstudio.microsoft.com/download/pr/e5617c98-d08e-43f2-a9bf-a36fec5306b7/d2ffb8978958712807d88ebf38914f47/razorlanguageserver-win-x86-7.0.0-preview.23456.2.zip",
              "NEW_DEPS_VERSION": "7.0.0-preview.23456.2",
              "NEW_DEPS_ID": "Razor"
          },
          "cwd": "${workspaceFolder}"
      },
      {
        "type": "node",
        "request": "launch",
        "name": "Generate debugger options schema",
        "preLaunchTask": "build",
        "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
        "args": [
            "generateOptionsSchema"
        ],
        "cwd": "${workspaceFolder}"
    }
    ]
}
